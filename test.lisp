(defun group (lst n)
	   (if (zerop n)
	       "zero length is not permitted"
	       (labels ((rec (x acc) 
			     (if (nthcdr n x)
				 (append (rec (nthcdr n x) acc) (list (subseq x 0 n)))
				 (append acc (list x)))))
		 (reverse (rec lst nil)))))

(defun flattern (lst)
	   (labels ((rec (x acc)
		      (cond ((null x) acc)
			    ((atom x) (cons x acc))
			    (t (rec (car x) 
				    (rec (cdr x) acc))))))
	     (rec lst nil)))